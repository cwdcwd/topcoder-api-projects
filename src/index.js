/**
 * tc-project-service
 * Services that provide access and interaction with user projects.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AddMilestoneRequest', 'model/AddMilestoneResponse', 'model/AddMilestoneResult', 'model/BillingAccount', 'model/BillingAccountBody', 'model/BillingAccountPostResponse', 'model/BillingAccountPostResult', 'model/CopilotDeleteResponse', 'model/CopilotDeleteResult', 'model/CopilotPostContent', 'model/CopilotPostResponse', 'model/CopilotPostResult', 'model/CopilotRequestBody', 'model/DirectProjectType', 'model/GenericResponse', 'model/GenericResult', 'model/OptionalAnswer', 'model/Permission', 'model/PermissionInfo', 'model/PermissionPermissionType', 'model/PermissionsBody', 'model/ProjectAnswer', 'model/ProjectGetContent', 'model/ProjectGetContentProject', 'model/ProjectGetResponse', 'model/ProjectGetResult', 'model/ProjectPermissionsGetResponse', 'model/ProjectPostContent', 'model/ProjectPostResponse', 'model/ProjectPostResult', 'model/ProjectQuestion', 'model/ProjectQuestionOption', 'model/ProjectRequestBody', 'model/UserProjectContent', 'model/UserProjectResult', 'model/UserProjectsGetResponse', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AddMilestoneRequest'), require('./model/AddMilestoneResponse'), require('./model/AddMilestoneResult'), require('./model/BillingAccount'), require('./model/BillingAccountBody'), require('./model/BillingAccountPostResponse'), require('./model/BillingAccountPostResult'), require('./model/CopilotDeleteResponse'), require('./model/CopilotDeleteResult'), require('./model/CopilotPostContent'), require('./model/CopilotPostResponse'), require('./model/CopilotPostResult'), require('./model/CopilotRequestBody'), require('./model/DirectProjectType'), require('./model/GenericResponse'), require('./model/GenericResult'), require('./model/OptionalAnswer'), require('./model/Permission'), require('./model/PermissionInfo'), require('./model/PermissionPermissionType'), require('./model/PermissionsBody'), require('./model/ProjectAnswer'), require('./model/ProjectGetContent'), require('./model/ProjectGetContentProject'), require('./model/ProjectGetResponse'), require('./model/ProjectGetResult'), require('./model/ProjectPermissionsGetResponse'), require('./model/ProjectPostContent'), require('./model/ProjectPostResponse'), require('./model/ProjectPostResult'), require('./model/ProjectQuestion'), require('./model/ProjectQuestionOption'), require('./model/ProjectRequestBody'), require('./model/UserProjectContent'), require('./model/UserProjectResult'), require('./model/UserProjectsGetResponse'), require('./api/DefaultApi'));
  }
}(function(ApiClient, AddMilestoneRequest, AddMilestoneResponse, AddMilestoneResult, BillingAccount, BillingAccountBody, BillingAccountPostResponse, BillingAccountPostResult, CopilotDeleteResponse, CopilotDeleteResult, CopilotPostContent, CopilotPostResponse, CopilotPostResult, CopilotRequestBody, DirectProjectType, GenericResponse, GenericResult, OptionalAnswer, Permission, PermissionInfo, PermissionPermissionType, PermissionsBody, ProjectAnswer, ProjectGetContent, ProjectGetContentProject, ProjectGetResponse, ProjectGetResult, ProjectPermissionsGetResponse, ProjectPostContent, ProjectPostResponse, ProjectPostResult, ProjectQuestion, ProjectQuestionOption, ProjectRequestBody, UserProjectContent, UserProjectResult, UserProjectsGetResponse, DefaultApi) {
  'use strict';

  /**
   * Services_that_provide_access_and_interaction_with_user_projects_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var TcProjectService = require('index'); // See note below*.
   * var xxxSvc = new TcProjectService.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new TcProjectService.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new TcProjectService.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new TcProjectService.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AddMilestoneRequest model constructor.
     * @property {module:model/AddMilestoneRequest}
     */
    AddMilestoneRequest: AddMilestoneRequest,
    /**
     * The AddMilestoneResponse model constructor.
     * @property {module:model/AddMilestoneResponse}
     */
    AddMilestoneResponse: AddMilestoneResponse,
    /**
     * The AddMilestoneResult model constructor.
     * @property {module:model/AddMilestoneResult}
     */
    AddMilestoneResult: AddMilestoneResult,
    /**
     * The BillingAccount model constructor.
     * @property {module:model/BillingAccount}
     */
    BillingAccount: BillingAccount,
    /**
     * The BillingAccountBody model constructor.
     * @property {module:model/BillingAccountBody}
     */
    BillingAccountBody: BillingAccountBody,
    /**
     * The BillingAccountPostResponse model constructor.
     * @property {module:model/BillingAccountPostResponse}
     */
    BillingAccountPostResponse: BillingAccountPostResponse,
    /**
     * The BillingAccountPostResult model constructor.
     * @property {module:model/BillingAccountPostResult}
     */
    BillingAccountPostResult: BillingAccountPostResult,
    /**
     * The CopilotDeleteResponse model constructor.
     * @property {module:model/CopilotDeleteResponse}
     */
    CopilotDeleteResponse: CopilotDeleteResponse,
    /**
     * The CopilotDeleteResult model constructor.
     * @property {module:model/CopilotDeleteResult}
     */
    CopilotDeleteResult: CopilotDeleteResult,
    /**
     * The CopilotPostContent model constructor.
     * @property {module:model/CopilotPostContent}
     */
    CopilotPostContent: CopilotPostContent,
    /**
     * The CopilotPostResponse model constructor.
     * @property {module:model/CopilotPostResponse}
     */
    CopilotPostResponse: CopilotPostResponse,
    /**
     * The CopilotPostResult model constructor.
     * @property {module:model/CopilotPostResult}
     */
    CopilotPostResult: CopilotPostResult,
    /**
     * The CopilotRequestBody model constructor.
     * @property {module:model/CopilotRequestBody}
     */
    CopilotRequestBody: CopilotRequestBody,
    /**
     * The DirectProjectType model constructor.
     * @property {module:model/DirectProjectType}
     */
    DirectProjectType: DirectProjectType,
    /**
     * The GenericResponse model constructor.
     * @property {module:model/GenericResponse}
     */
    GenericResponse: GenericResponse,
    /**
     * The GenericResult model constructor.
     * @property {module:model/GenericResult}
     */
    GenericResult: GenericResult,
    /**
     * The OptionalAnswer model constructor.
     * @property {module:model/OptionalAnswer}
     */
    OptionalAnswer: OptionalAnswer,
    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission: Permission,
    /**
     * The PermissionInfo model constructor.
     * @property {module:model/PermissionInfo}
     */
    PermissionInfo: PermissionInfo,
    /**
     * The PermissionPermissionType model constructor.
     * @property {module:model/PermissionPermissionType}
     */
    PermissionPermissionType: PermissionPermissionType,
    /**
     * The PermissionsBody model constructor.
     * @property {module:model/PermissionsBody}
     */
    PermissionsBody: PermissionsBody,
    /**
     * The ProjectAnswer model constructor.
     * @property {module:model/ProjectAnswer}
     */
    ProjectAnswer: ProjectAnswer,
    /**
     * The ProjectGetContent model constructor.
     * @property {module:model/ProjectGetContent}
     */
    ProjectGetContent: ProjectGetContent,
    /**
     * The ProjectGetContentProject model constructor.
     * @property {module:model/ProjectGetContentProject}
     */
    ProjectGetContentProject: ProjectGetContentProject,
    /**
     * The ProjectGetResponse model constructor.
     * @property {module:model/ProjectGetResponse}
     */
    ProjectGetResponse: ProjectGetResponse,
    /**
     * The ProjectGetResult model constructor.
     * @property {module:model/ProjectGetResult}
     */
    ProjectGetResult: ProjectGetResult,
    /**
     * The ProjectPermissionsGetResponse model constructor.
     * @property {module:model/ProjectPermissionsGetResponse}
     */
    ProjectPermissionsGetResponse: ProjectPermissionsGetResponse,
    /**
     * The ProjectPostContent model constructor.
     * @property {module:model/ProjectPostContent}
     */
    ProjectPostContent: ProjectPostContent,
    /**
     * The ProjectPostResponse model constructor.
     * @property {module:model/ProjectPostResponse}
     */
    ProjectPostResponse: ProjectPostResponse,
    /**
     * The ProjectPostResult model constructor.
     * @property {module:model/ProjectPostResult}
     */
    ProjectPostResult: ProjectPostResult,
    /**
     * The ProjectQuestion model constructor.
     * @property {module:model/ProjectQuestion}
     */
    ProjectQuestion: ProjectQuestion,
    /**
     * The ProjectQuestionOption model constructor.
     * @property {module:model/ProjectQuestionOption}
     */
    ProjectQuestionOption: ProjectQuestionOption,
    /**
     * The ProjectRequestBody model constructor.
     * @property {module:model/ProjectRequestBody}
     */
    ProjectRequestBody: ProjectRequestBody,
    /**
     * The UserProjectContent model constructor.
     * @property {module:model/UserProjectContent}
     */
    UserProjectContent: UserProjectContent,
    /**
     * The UserProjectResult model constructor.
     * @property {module:model/UserProjectResult}
     */
    UserProjectResult: UserProjectResult,
    /**
     * The UserProjectsGetResponse model constructor.
     * @property {module:model/UserProjectsGetResponse}
     */
    UserProjectsGetResponse: UserProjectsGetResponse,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
