/**
 * tc-project-service
 * Services that provide access and interaction with user projects.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/OptionalAnswer', 'model/ProjectQuestion'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./OptionalAnswer'), require('./ProjectQuestion'));
  } else {
    // Browser globals (root is window)
    if (!root.TcProjectService) {
      root.TcProjectService = {};
    }
    root.TcProjectService.ProjectAnswer = factory(root.TcProjectService.ApiClient, root.TcProjectService.OptionalAnswer, root.TcProjectService.ProjectQuestion);
  }
}(this, function(ApiClient, OptionalAnswer, ProjectQuestion) {
  'use strict';




  /**
   * The ProjectAnswer model module.
   * @module model/ProjectAnswer
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ProjectAnswer</code>.
   * @alias module:model/ProjectAnswer
   * @class
   * @param id {Number} 
   */
  var exports = function(id) {
    var _this = this;

    _this['id'] = id;





  };

  /**
   * Constructs a <code>ProjectAnswer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProjectAnswer} obj Optional instance to populate.
   * @return {module:model/ProjectAnswer} The populated <code>ProjectAnswer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('textualAnswer')) {
        obj['textualAnswer'] = ApiClient.convertToType(data['textualAnswer'], 'String');
      }
      if (data.hasOwnProperty('multipleAnswers')) {
        obj['multipleAnswers'] = ApiClient.convertToType(data['multipleAnswers'], ['String']);
      }
      if (data.hasOwnProperty('optionAnswers')) {
        obj['optionAnswers'] = ApiClient.convertToType(data['optionAnswers'], [OptionalAnswer]);
      }
      if (data.hasOwnProperty('projectQuestion')) {
        obj['projectQuestion'] = ProjectQuestion.constructFromObject(data['projectQuestion']);
      }
      if (data.hasOwnProperty('project')) {
        obj['project'] = ApiClient.convertToType(data['project'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} textualAnswer
   */
  exports.prototype['textualAnswer'] = undefined;
  /**
   * @member {Array.<String>} multipleAnswers
   */
  exports.prototype['multipleAnswers'] = undefined;
  /**
   * @member {Array.<module:model/OptionalAnswer>} optionAnswers
   */
  exports.prototype['optionAnswers'] = undefined;
  /**
   * @member {module:model/ProjectQuestion} projectQuestion
   */
  exports.prototype['projectQuestion'] = undefined;
  /**
   * @member {String} project
   */
  exports.prototype['project'] = undefined;



  return exports;
}));


