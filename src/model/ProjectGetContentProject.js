/**
 * tc-project-service
 * Services that provide access and interaction with user projects.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ProjectAnswer'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ProjectAnswer'));
  } else {
    // Browser globals (root is window)
    if (!root.TcProjectService) {
      root.TcProjectService = {};
    }
    root.TcProjectService.ProjectGetContentProject = factory(root.TcProjectService.ApiClient, root.TcProjectService.ProjectAnswer);
  }
}(this, function(ApiClient, ProjectAnswer) {
  'use strict';




  /**
   * The ProjectGetContentProject model module.
   * @module model/ProjectGetContentProject
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>ProjectGetContentProject</code>.
   * @alias module:model/ProjectGetContentProject
   * @class
   * @param projectId {Number} 
   * @param name {String} 
   * @param projectStatusId {Number} 
   */
  var exports = function(projectId, name, projectStatusId) {
    var _this = this;

    _this['projectId'] = projectId;
    _this['name'] = name;

    _this['projectStatusId'] = projectStatusId;









  };

  /**
   * Constructs a <code>ProjectGetContentProject</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProjectGetContentProject} obj Optional instance to populate.
   * @return {module:model/ProjectGetContentProject} The populated <code>ProjectGetContentProject</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('projectId')) {
        obj['projectId'] = ApiClient.convertToType(data['projectId'], 'Number');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('projectStatusId')) {
        obj['projectStatusId'] = ApiClient.convertToType(data['projectStatusId'], 'Number');
      }
      if (data.hasOwnProperty('forumCategoryId')) {
        obj['forumCategoryId'] = ApiClient.convertToType(data['forumCategoryId'], 'Number');
      }
      if (data.hasOwnProperty('creationDate')) {
        obj['creationDate'] = ApiClient.convertToType(data['creationDate'], 'String');
      }
      if (data.hasOwnProperty('completionDate')) {
        obj['completionDate'] = ApiClient.convertToType(data['completionDate'], 'String');
      }
      if (data.hasOwnProperty('projectType')) {
        obj['projectType'] = ApiClient.convertToType(data['projectType'], 'String');
      }
      if (data.hasOwnProperty('projectCategory')) {
        obj['projectCategory'] = ApiClient.convertToType(data['projectCategory'], 'String');
      }
      if (data.hasOwnProperty('fixedBugContestFee')) {
        obj['fixedBugContestFee'] = ApiClient.convertToType(data['fixedBugContestFee'], 'Number');
      }
      if (data.hasOwnProperty('percentageBugContestFee')) {
        obj['percentageBugContestFee'] = ApiClient.convertToType(data['percentageBugContestFee'], 'Number');
      }
      if (data.hasOwnProperty('projectBillingAccountId')) {
        obj['projectBillingAccountId'] = ApiClient.convertToType(data['projectBillingAccountId'], 'Number');
      }
      if (data.hasOwnProperty('projectAnswers')) {
        obj['projectAnswers'] = ApiClient.convertToType(data['projectAnswers'], [ProjectAnswer]);
      }
    }
    return obj;
  }

  /**
   * @member {Number} projectId
   */
  exports.prototype['projectId'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {Number} projectStatusId
   */
  exports.prototype['projectStatusId'] = undefined;
  /**
   * @member {Number} forumCategoryId
   */
  exports.prototype['forumCategoryId'] = undefined;
  /**
   * @member {String} creationDate
   */
  exports.prototype['creationDate'] = undefined;
  /**
   * @member {String} completionDate
   */
  exports.prototype['completionDate'] = undefined;
  /**
   * @member {String} projectType
   */
  exports.prototype['projectType'] = undefined;
  /**
   * @member {String} projectCategory
   */
  exports.prototype['projectCategory'] = undefined;
  /**
   * @member {Number} fixedBugContestFee
   */
  exports.prototype['fixedBugContestFee'] = undefined;
  /**
   * @member {Number} percentageBugContestFee
   */
  exports.prototype['percentageBugContestFee'] = undefined;
  /**
   * @member {Number} projectBillingAccountId
   */
  exports.prototype['projectBillingAccountId'] = undefined;
  /**
   * @member {Array.<module:model/ProjectAnswer>} projectAnswers
   */
  exports.prototype['projectAnswers'] = undefined;



  return exports;
}));


